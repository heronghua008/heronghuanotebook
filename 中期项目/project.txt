项目注意事项

1.什么是项目
2.重要文档说明
3.软件工具推荐
4.电子词典布置

协程应用
pdb调试方法

完成httpserver第三版
httpserver模块的使用
***********************************************

什么是项目

软件项目 ： 实现一定完整性功能的代码

软件项目的一般开发流程

需求分析 ---》概要设计 ---》 项目集合  ---》 
详细设计 ---》 编码测试 ---》 项目测试 ---》
调试修改 ---》 项目发布 ---》 后期维护

需求分析 ： 确定用户的真实需求

1. 确定用户真实意图，项目基本功能
2. 项目的难度，可行性分析
3. 建立需求分析完档，客户确认


概要设计：对项目进行整体分析，初步设计确定技术方向

1. 确定项目整体架构
2. 确定项目模块化功能
3. 确定项目使用技术
4. 编写项目开发流程图和概要设计文档

项目计划 ： 确定项目的开发流程分工和时间周期
1. 确定开发的先后顺序
2. 确定开发对的时间轴和事件里程碑
3. 人员分工 
4. 形成甘特图和开发思维导图

详细设计 :  项目的具体开发设计，完成设计手册

1. 根据开发内容，形成详细设计文档
   思路   逻辑流程，功能说明，技术点说明，数据结构说明，代码说明。环境和约束

编码测试： 按照预定计划实现代码编写，并且做基本检测

1. 写代码
2. 写测试代码
3. 技术攻关
4. 提交代码，代码整合

项目测试： 对项目整体功能进行测试
1. 跨平台测试  黑盒白盒  重复  功能性
2. 测试报告
3. 修改代码完善功能

项目发布
1. 将项目提交给用户，进行发布使用
2. 编写使用说明文档

注意事项：
1. 按时完成项目是首要工作
2. 项目实施人员之间的冲突解决
3. 无计划实施必然带来更大的效率低下


项目工具的使用

编写文档 ： word  ppt excel  markdown  LaTex 
项目流程图： Mindmanager Xmind  visio
项目管理 ： project
代码管理 ： git  Svn
编译工具 ： pycharm  Webstream eclipes 

电子词典

功能说明：

1. 用户可以登录注册
   登录凭借用户名和密码即可
   注册 要求用户名和密码 且用户名不能重复

2. 用户信息需要长期保存，保证退出后下次仍然可用

3. 能够满足多个用户同时登录操作的情况

4. 功能分为客户端和服务端，客户端主要发起请求，进    入客户端后即产生第一级界面
     登录   注册   退出
5. 登录成功后进入二级界面
     查词    查看历史记录   退出

   查词 ： 输入单词查看意思，可以循环输入
       单词本 ： 每个单词一行
                 单词和解释之间有空格
                 单词顺序排列
       * 文本操作  * 将单词放入数据库

   查看历史记录 ： 查看当前用户查词情况
          name    word    time
   退出 ： 退出到一级界面相当于注销


项目分析

模块
socket   pymysql/pymongo  
os  multiprocessing  threading

服务器功能 ： 登录  注册  查词  历史记录

客户端 ： 打印界面， 提出请求， 接受反馈，打印结果

技术点 ： 并发   数据库操作  决定套接字

1. 确定技术点（什么并发，什么套接字，什么数据库，文件处理还是数据库查询，如果是数据库查询那么编写代码将单词存入数据库）

2.  建立数据表（建立几个表，表之间关系，表的字段，字段的类型）

3. 搭建框架，实现通信功能

4. 尝试实现具体功能


技术点确定
soctet  ---》 tcp 
并发 ---》 多进程
数据库 ---》 mysql
查词 ---》 文本操作

create table words (id int auto_increment primary key,word varchar(32) not null,interpret text not null);


数据表

user： id    name    passwd  
hist： id    name    word     time

words： id   word   interpret

 create table user(id int auto_increment primary key,name varchar(32) not null,passwd varchar(16) default '000000');

 create table hist(id int auto_increment primary key,name varchar(32) not null,word varchar(32) not null,time varchar(64));

服务器
main() :  创建套接字---》父子进程 ---》子进程等待           接受客户端请求--》父进程继续等待连接

child() : 接受请求，分析请求类型，调用响应方法
login() ： 操作数据库比对用户名密码，回复结果
register()：判断是否可以注册，插入数据库
query()：单词查找，将结果返回给客户端。插入历史记          录
history() 查找数据库，将历史记录返回给客户端

客户端
main() : 创建套接字---》发送连接请求--》一级界面
         ---》登录 input-- 》二级界面

login（） 提交用户名密码，如果可以进入二级界面
register（） 提交注册内容
------------------
query() 提交要查找的单词，得到回复打印
history() 得到回复，将历史记录打印

1. 完成功能函数模型的填写（函数名，需要什么参数，什么返回值，如何调用）
2. 客户端二级界面如何返回


cookie

import getpass

getpass.getpass()
功能 ： 隐藏输入密码


协程

定义 ： 纤程，微线程。本质上只是一个线程在运行。

功能特点 ： 通过应用层程序，记录上下文栈区，实现在程序执行过程中的跳跃执行。由此可以选择不阻塞的部分执行以提升运行效率。

优点 ： 资源消耗少
        无需多线程那样进行多核之间的切换
	无需同步互斥操作
	IO并发性好

缺点 ： 无法利用计算机的多核资源

yield ---》 python实现协程的基本手段

greenlet   gevent   evenless  stackless

sudo  pip3 install greenlet
sudo  pip3 install gevent

greenlet
 gr = greenlet.greenlet()
 gr.switch()

gevent

* 将协程事件封装为函数
* 通过gevent将函数生成对应的协程对象
* 通过协程对象完成协程功能的实现

gevent.spawn(func,argv)
功能 ： 将事件变为协程事件并启动
参数 ： func 出入一个函数变为协程
        argv  给func位置传参
返回值 ： 协程对象

gevent.joinall([g1,g2,g3.....])
功能 ： 阻塞回收协程
参数 ： 列表 要回收的协程对象

gevent.sleep(n)
功能 ： 可以模拟IO阻塞的情况


作业 ： 1. 复习http协议
        2. 复习httpserver第二版
	3. 电子词典梳理一遍


